{"version":3,"sources":["components/TodoForm/TodoForm.js","components/TodoList/TodoList.js","components/App/App.js","reportWebVitals.js","index.js","components/TodoList/TodoList.module.css","components/TodoForm/TodoForm.module.css","components/App/App.module.css"],"names":["TodoForm","props","useState","task","setTask","className","styles","container","name","form","action","onSubmit","e","preventDefault","addTask","input","type","placeholder","required","minLength","maxLength","onChange","target","value","button","TodoList","list","element","toggle","checked","completed","handleToggle","id","todoEditing","defaultValue","setEditName","active","icons","delete","onClick","handleDelete","handleEdit","edit","setTodoEditing","App","todos","setTodos","editName","filter","map","elem","useEffect","save","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","main","newTask","Math","random","item","footer","text","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a69d42f0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./TodoForm.module.css\";\n\nfunction TodoForm(props) {\n  const [task, setTask] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(task);\n\n    setTask(\"\");\n  }\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.name}>TODO LIST</h1>\n      <form className={styles.form} action=\"#\" onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"What do you need to do?\"\n          required\n          minLength={2}\n          maxLength={40}\n          onChange={(e) => setTask(e.target.value)}\n          value={task}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React from \"react\";\nimport styles from \"./TodoList.module.css\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { FaSave } from \"react-icons/fa\";\n\nfunction TodoList(props) {\n  function defaultValue() {\n    props.setTodoEditing(props.id);\n    props.setEditName(props.task);\n  }\n\n  return (\n    <div className={styles.list}>\n      <div className={styles.element}>\n        <input\n          className={styles.toggle}\n          type=\"checkbox\"\n          checked={props.completed}\n          onChange={() => props.handleToggle(props.id)}\n        />\n        {props.id === props.todoEditing ? (\n          <input\n            type=\"text\"\n            defaultValue={props.task}\n            onChange={(e) => {\n              props.setEditName(e.target.value);\n            }}\n          />\n        ) : (\n          <p className={!props.completed ? styles.active : styles.completed}>\n            {props.task}\n          </p>\n        )}\n        <div className={styles.icons}>\n          <RiCloseCircleLine\n            className={styles.delete}\n            onClick={() => props.handleDelete(props.id)}\n          />\n          {props.id === props.todoEditing ? (\n            <FaSave onClick={() => props.handleEdit(props.id)} />\n          ) : (\n            <TiEdit className={styles.edit} onClick={defaultValue} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { useState } from \"react\";\nimport TodoForm from \"../TodoForm/TodoForm\";\nimport TodoList from \"../TodoList/TodoList\";\nimport styles from \"./App.module.css\";\nimport React, { useEffect } from \"react\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [editName, setEditName] = useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n\n  function addTask(task) {\n    const newTask = {\n      id: Math.random(),\n      task: task,\n      completed: false,\n    };\n    setTodos([...todos, newTask]);\n  }\n\n  function handleDelete(id) {\n    setTodos(todos.filter((element) => element.id !== id));\n  }\n\n  function handleToggle(id) {\n    setTodos(\n      todos.map((elem) => {\n        if (elem.id === id) {\n          return {\n            ...elem,\n            completed: !elem.completed,\n          };\n        }\n        return elem;\n      })\n    );\n  }\n\n  function handleEdit(id) {\n    setTodos(\n      todos.map((elem) => {\n        if (elem.id === id) {\n          return {\n            ...elem,\n            task: editName,\n          };\n        }\n        return elem;\n      })\n    );\n    setTodoEditing(null);\n  }\n\n  useEffect(() => {\n    const save = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(save);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const save = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", save);\n  }, [todos]);\n\n  return (\n    <div className={styles.main}>\n      <TodoForm addTask={addTask} />\n\n      {todos.map((item) => {\n        return (\n          <TodoList\n            key={item.id}\n            id={item.id}\n            task={item.task}\n            completed={item.completed}\n            handleDelete={handleDelete}\n            handleToggle={handleToggle}\n            handleEdit={handleEdit}\n            setTodoEditing={setTodoEditing}\n            todoEditing={todoEditing}\n            setEditName={setEditName}\n          />\n        );\n      })}\n\n      <div className={styles.footer}>\n        <p className={styles.text}>Количество задач:</p>\n        <p>{todos.length}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__28unk\",\"element\":\"TodoList_element__3Tl5t\",\"active\":\"TodoList_active__eXgXJ\",\"completed\":\"TodoList_completed__V7ye0\",\"icons\":\"TodoList_icons__2fAtN\",\"delete\":\"TodoList_delete__1_XRM\",\"edit\":\"TodoList_edit__35R17\",\"toggle\":\"TodoList_toggle__1bHDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"TodoForm_name__2nyQ1\",\"form\":\"TodoForm_form__1HLk3\",\"input\":\"TodoForm_input__1u2mz\",\"button\":\"TodoForm_button__3BQ1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__1gaEQ\",\"footer\":\"App_footer__3JT4n\",\"text\":\"App_text__1U7Z6\"};"],"sourceRoot":""}